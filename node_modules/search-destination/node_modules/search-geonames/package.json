{
  "name": "search-geonames",
  "version": "0.0.7",
  "description": "Public search geographical place using Geonames API",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "underscore": "^1.6.0",
    "request": "^2.36.0"
  },
  "keywords": [
    "search",
    "place",
    "geonames",
    "geocoder",
    "wikipedia"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/kolegm/search-geonames.git"
  },
  "author": {
    "name": "Oleg Kravchuk",
    "email": "kolegm.real@gmail.com"
  },
  "license": "ISC",
  "readme": "##search-geonames\n\n### General\nNode.js module for geocoding and reverse geocoding.  \n\nGeocoding. Geonames API - [search by query](http://www.geonames.org/export/geonames-search.html).\nIt is the process of matching address with geographic coordinates.\n[Response example](http://api.geonames.org/findNearbyJSON?lat=47.3&lng=9&username=demo&style=LONG).  \nReverse Geocoding. Geonames API - [findNearBy](http://www.geonames.org/export/web-services.html#findNearby)\nIt is the process of matching geographic coordinates with address.\n[Response example](http://api.geonames.org/findNearbyJSON?lat=47.3&lng=9&username=demo&style=LONG).  \nWikipedia, search data by query about location. Geonames API - [Wikipedia fulltext search](http://www.geonames.org/export/wikipedia-webservice.html#wikipediaSearch).\n[Response example](http://api.geonames.org/wikipediaSearchJSON?q=london&username=demo&maxRows=10).  \nWikipedia, search data by coordinates about location. Geonames API - [find nerby Wikipedia Entries](http://www.geonames.org/export/wikipedia-webservice.html#findNearbyWikipedia).\n[Response example](http://api.geonames.org/findNearbyWikipediaJSON?lat=47&lng=9&username=demo).  \n\nOutput format like JSON.\n\n[Description](http://www.geonames.org/export/#ws)\n\n### Installation\n>npm install search-geonames [-S]\n\n### Usage example\n```javascript\n// initialize geocoder instance\nvar geonames = require('search-geonames');\n\n// request parameters\nconst ADDRESS = 'Kyiv, Khreshchatyk';\nconst LATITUDE = '50.45';\nconst LONGITUDE = '30.523';\nconst LANGUAGE = 'en';\n\n// you can use Google options to manage result format\nvar options = {\n  language: LANGUAGE\n};\n\n// use callback to return result from geocoding process\nfunction callback (error, result) {\n  if (error) console.log(error); // on error\n  else console.log(result); // on success\n}\n\n// address geocoding\ngeonames.searchByQuery(ADDRESS, callback, options);\n// reverse geocoding\ngeonames.findNearBy(LATITUDE, LONGITUDE, callback, options);\n// get wiki data by address\ncommunicator.wikiSearchByQuery(ADDRESS, callback, options);\n// get wiki data by geographic coordinates\ncommunicator.wikiFindNearBy(LATITUDE, LONGITUDE,  callback,  options);\n\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "de50f41e6e514d163483fb064dd0914987ef2caa",
  "bugs": {
    "url": "https://github.com/kolegm/search-geonames/issues"
  },
  "homepage": "https://github.com/kolegm/search-geonames",
  "_id": "search-geonames@0.0.7",
  "_shasum": "fb96f5dae10a7737147006fda1810a46c0d6cde6",
  "_from": "search-geonames@^0.0.7"
}
